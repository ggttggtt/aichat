<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.ChatMessageMapper">

    <resultMap id="ChatMessageResultMap" type="com.example.springboot.entity.ChatMessage">
        <id property="id" column="id"/>
        <result property="matchId" column="match_id"/>
        <result property="senderId" column="sender_id"/>
        <result property="receiverId" column="receiver_id"/>
        <result property="content" column="content"/>
        <result property="sendTime" column="send_time"/>
        <result property="isRead" column="is_read"/>
    </resultMap>

    <select id="getById" resultMap="ChatMessageResultMap">
        SELECT *
        FROM chat_message
        WHERE id = #{id}
    </select>

    <select id="getMessagesByMatchId" resultMap="ChatMessageResultMap">
        SELECT *
        FROM chat_message
        WHERE match_id = #{matchId}
        ORDER BY send_time ASC
    </select>

    <select id="getLastMessageByMatchId" resultMap="ChatMessageResultMap">
        SELECT *
        FROM chat_message
        WHERE match_id = #{matchId}
        ORDER BY send_time DESC
        LIMIT 1
    </select>

    <select id="getUnreadCount" resultType="int">
        SELECT COUNT(*)
        FROM chat_message
        WHERE match_id = #{matchId}
          AND receiver_id = #{receiverId}
          AND is_read = 0
    </select>

    <insert id="insert" parameterType="com.example.springboot.entity.ChatMessage" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO chat_message (match_id, sender_id, receiver_id, content, send_time, is_read)
        VALUES (#{matchId}, #{senderId}, #{receiverId}, #{content}, NOW(), 0)
    </insert>

    <update id="markAsRead">
        UPDATE chat_message
        SET is_read = 1
        WHERE match_id = #{matchId}
          AND receiver_id = #{receiverId}
          AND is_read = 0
    </update>

</mapper> 